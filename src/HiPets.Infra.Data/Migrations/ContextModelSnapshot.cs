// <auto-generated />
using System;
using HiPets.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HiPets.Infra.Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HiPets.Domain.Entities.Adopter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2018, 10, 20, 14, 22, 12, 400, DateTimeKind.Local));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Adopter");
                });

            modelBuilder.Entity("HiPets.Domain.Entities.Adoption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdopterId");

                    b.Property<int>("AdoptionStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("AnimalId");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2018, 10, 20, 14, 22, 12, 411, DateTimeKind.Local));

                    b.Property<string>("Observation")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdopterId");

                    b.HasIndex("AnimalId");

                    b.ToTable("Adoption");
                });

            modelBuilder.Entity("HiPets.Domain.Entities.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdopterId");

                    b.Property<DateTime?>("AdoptionDate");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AnimalStatus")
                        .HasColumnType("int");

                    b.Property<int>("AnimalType")
                        .HasColumnType("int");

                    b.Property<string>("Behavior")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2018, 10, 20, 14, 22, 12, 366, DateTimeKind.Local));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("PrevalentColor")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdopterId");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("HiPets.Domain.Entities.Adopter", b =>
                {
                    b.OwnsOne("HiPets.Domain.Helpers.ValueObjects.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<Guid?>("AdopterId");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(150)");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnName("PhoneNumber")
                                .HasColumnType("varchar(11)");

                            b1.ToTable("Adopter");

                            b1.HasOne("HiPets.Domain.Entities.Adopter")
                                .WithOne("ContactInfo")
                                .HasForeignKey("HiPets.Domain.Helpers.ValueObjects.ContactInfo", "AdopterId")
                                .OnDelete(DeleteBehavior.Restrict);
                        });
                });

            modelBuilder.Entity("HiPets.Domain.Entities.Adoption", b =>
                {
                    b.HasOne("HiPets.Domain.Entities.Adopter", "Adopter")
                        .WithMany()
                        .HasForeignKey("AdopterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HiPets.Domain.Entities.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HiPets.Domain.Entities.Animal", b =>
                {
                    b.HasOne("HiPets.Domain.Entities.Adopter", "Adopter")
                        .WithMany("Animals")
                        .HasForeignKey("AdopterId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
